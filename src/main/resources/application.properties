# Oracle config
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
endpoint.oracle.single=jdbc:dataSource?outputType=SelectOne
endpoint.oracle.list=jdbc:dataSource?statement.fetchSize=1000
query.oracle.corporate_body_count=resource:classpath:/sql/company_count.sql
query.oracle.corporate_body_collection=resource:classpath:/sql/company_collection.sql
endpoint.oracle.dsq_officer_collection=jdbc:dataSource
query.oracle.dsq_officer_collection=resource:classpath:/sql/dsq_officers_collection.sql
queries.oracle.company_status=resource:classpath:/sql/company_status/company_status_sql_queries.xml
query.oracle.insolvency_company_number=resource:classpath:/sql/insolvency_company_number.sql
query.oracle.insolvency_cases=resource:classpath:/sql/insolvency_cases.sql

# MongoDB config
endpoint.mongodb.company_profile_count=mongodb:mongo?database=${ENDPOINT_MONGODB_COMPANY_PROFILE_DB_NAME}&collection=${ENDPOINT_MONGODB_COMPANY_PROFILE_COLLECTION_NAME}&operation=count&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}
endpoint.mongodb.company_profile_collection=mongodb:mongo?database=${ENDPOINT_MONGODB_COMPANY_PROFILE_DB_NAME}&collection=${ENDPOINT_MONGODB_COMPANY_PROFILE_COLLECTION_NAME}&operation=aggregate&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}
endpoint.mongodb.disqualifications_collection=mongodb:mongo?database=${ENDPOINT_MONGODB_DSQ_OFFICER_DB_NAME}&collection=${ENDPOINT_MONGODB_DSQ_OFFICER_COLLECTION_NAME}&operation=aggregate&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}
endpoint.mongodb.insolvency_collection=mongodb:mongo?database=${ENDPOINT_MONGODB_INSOLVENCY_DB_NAME}&collection=${ENDPOINT_MONGODB_INSOLVENCY_COLLECTION_NAME}&operation=aggregate&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}

# Elasticsearch config
endpoint.elasticsearch.alpha=es-bulk-load://es_alpha?hostname=${ELASTICSEARCH_ALPHA_HOST}&indexName=${ELASTICSEARCH_ALPHA_INDEX}&portNumber=${ELASTICSEARCH_ALPHA_PORT}&protocol=${ELASTICSEARCH_ALPHA_PROTOCOL:https}&numberOfSegments=${ELASTICSEARCH_ALPHA_SEGMENTS}&maximumSliceSize=${ELASTICSEARCH_ALPHA_SLICE_SIZE}&sliceField=${ELASTICSEARCH_ALPHA_SLICE_FIELD}
endpoint.elasticsearch.primary=es-bulk-load://es_alpha?hostname=${ELASTICSEARCH_PRIMARY_HOST}&indexName=${ELASTICSEARCH_PRIMARY_INDEX}&portNumber=${ELASTICSEARCH_PRIMARY_PORT}&protocol=${ELASTICSEARCH_PRIMARY_PROTOCOL:https}&numberOfSegments=${ELASTICSEARCH_PRIMARY_SEGMENTS}&maximumSliceSize=${ELASTICSEARCH_PRIMARY_SLICE_SIZE}&sliceField=${ELASTICSEARCH_PRIMARY_SLICE_FIELD}
query.elasticsearch.alpha.company=resource:classpath:/elasticsearch/alpha.json
query.elasticsearch.primary.company=resource:classpath:/elasticsearch/primary_company.json
endpoint.elasticsearch.log_indices=${ENDPOINT_ELASTICSEARCH_LOG_INDICES:100000}

# AWS config
#endpoint.s3.upload=aws2-s3://${RESULTS_BUCKET}?accessKey=RAW(${AWS_ACCESS_KEY_ID})&secretKey=RAW(${AWS_SECRET_ACCESS_KEY})&region=${AWS_REGION}
endpoint.s3.upload=aws2-s3://${RESULTS_BUCKET}?autoDiscoverClient=true
#endpoint.s3presigner.download=aws2-s3://${RESULTS_BUCKET}?operation=createDownloadLink&accessKey=RAW(${AWS_ACCESS_KEY_ID})&secretKey=RAW(${AWS_SECRET_ACCESS_KEY})&region=${AWS_REGION}
endpoint.s3presigner.download=aws2-s3://${RESULTS_BUCKET}?operation=createDownloadLink&autoDiscoverClient=true
aws.expiry=${RESULTS_EXPIRY_TIME_IN_MILLIS}

# Kafka config
endpoint.kafka.sender=direct:send-to-kafka
endpoint.kafka=kafka://email-send?schemaRegistryURL=${SCHEMA_REGISTRY_URL}&brokers=${KAFKA_BROKER_ADDR}&valueSerializer=org.apache.kafka.common.serialization.ByteArraySerializer&requestRequiredAcks=-1&retries=10&maxBlockMs=1000&requestTimeoutMs=1000

# Caffeine cache config
endpoint.cache=caffeine-cache://cache?expireAfterWriteTime=${CACHE_EXPIRY_IN_SECONDS:300}&evictionType=TIME_BASED
endpoint.elasticsearch.primary.cache.key=elasticsearchPrimary
endpoint.elasticsearch.alpha.cache.key=elasticsearchAlpha
endpoint.mongodb.company_profile.cache.key=mongoCompanyProfile
endpoint.mongodb.disqualifications.cache.key=mongoDisqualifications
endpoint.mongodb.insolvency.cache.key=mongoInsolvencies
endpoint.mongodb.insolvency_cases.cache.key=mongoInsolvencyCases

# Timers
endpoint.company_count_mongo_oracle.timer=timer:company_count_mongo_oracle?repeatCount=1&delay=${COMPANY_COUNT_MONGO_ORACLE_DELAY}
endpoint.company_number_mongo_oracle.timer=timer:company_number_mongo_oracle?repeatCount=1&delay=${COMPANY_NUMBER_MONGO_ORACLE_DELAY}
endpoint.company_number_mongo_primary.timer=timer:company_number_mongo_primary?repeatCount=1&delay=${COMPANY_NUMBER_MONGO_PRIMARY_DELAY}
endpoint.company_number_mongo_alpha.timer=timer:company_number_mongo_alpha?repeatCount=1&delay=${COMPANY_NUMBER_MONGO_ALPHA_DELAY}
endpoint.dsq_officer_id_mongo_oracle.timer=timer:dsq_officer_id_mongo_oracle?repeatCount=1&delay=${DSQ_OFFICER_ID_MONGO_ORACLE_DELAY}
endpoint.company_name_mongo_primary.timer=timer:company_name_mongo_primary?repeatCount=1&delay=${COMPANY_NAME_MONGO_PRIMARY_DELAY}
endpoint.company_name_mongo_alpha.timer=timer:company_name_mongo_alpha?repeatCount=1&delay=${COMPANY_NAME_MONGO_ALPHA_DELAY}
endpoint.company_status_mongo_primary.timer=timer:company_status_mongo_primary?repeatCount=1&delay=${COMPANY_STATUS_MONGO_PRIMARY_DELAY}
endpoint.company_status_mongo_alpha.timer=timer:company_status_mongo_alpha?repeatCount=1&delay=${COMPANY_STATUS_MONGO_ALPHA_DELAY}
endpoint.company_status_mongo_oracle.timer=timer:company_status_mongo_oracle?repeatCount=1&delay=${COMPANY_STATUS_MONGO_ORACLE_DELAY}
endpoint.insolvency.company_number_mongo_oracle.timer=timer:insolvency_company_number?repeatCount=1&delay=${INSOLVENCY_COMPANY_NUMBER_MONGO_ORACLE_DELAY}
endpoint.insolvency.case_count_mongo_oracle.timer=timer:insolvency_case_count_mongo_oracle?repeatCount=1&delay=${INSOLVENCY_CASE_COUNT_MONGO_ORACLE_DELAY}

# Trigger Route Toggles
company_count_mongo_oracle_enabled=${COMPANY_COUNT_MONGO_ORACLE_ENABLED}
company_number_mongo_oracle_enabled=${COMPANY_NUMBER_MONGO_ORACLE_ENABLED}
company_status_mongo_oracle_enabled=${COMPANY_STATUS_MONGO_ORACLE_ENABLED}

dsq_officer_id_mongo_oracle_enabled=${DSQ_OFFICER_ID_MONGO_ORACLE_ENABLED}

company_number_mongo_primary_enabled=${COMPANY_NUMBER_MONGO_PRIMARY_ENABLED}
company_name_mongo_primary_enabled=${COMPANY_NAME_MONGO_PRIMARY_ENABLED}
company_status_mongo_primary_enabled=${COMPANY_STATUS_MONGO_PRIMARY_ENABLED}
company_number_mongo_alpha_enabled=${COMPANY_NUMBER_MONGO_ALPHA_ENABLED}
company_name_mongo_alpha_enabled=${COMPANY_NAME_MONGO_ALPHA_ENABLED}
company_status_mongo_alpha_enabled=${COMPANY_STATUS_MONGO_ALPHA_ENABLED}
insolvency_company_number_mongo_oracle_enabled=${INSOLVENCY_COMPANY_NUMBER_MONGO_ORACLE_ENABLED}
insolvency_case_count_mongo_oracle_enabled=${INSOLVENCY_CASE_COUNT_MONGO_ORACLE_ENABLED}

# Functions
function.name.compare_count=direct:compare_count
function.name.compare_collection=direct:compare_collection
function.name.compare_results=direct:compare_results

# Function Mappers
function.mapper.company_name=direct:compare-company-name
function.mapper.company_status=direct:compare-company-status
function.mapper.insolvency_cases=direct:compare-insolvency-cases

# Output aggregation config
endpoint.output=direct:send-email
email.recipient.list=${EMAIL_RECIPIENT_LIST}
email.application.id=${EMAIL_APPLICATION_ID}
email.message.id=${EMAIL_MESSAGE_ID}
email.message.type=${EMAIL_MESSAGE_TYPE}
email.sender=${EMAIL_SENDER}
email.date.format=dd MMMM yyyy

# Service mappers
endpoint.elasticsearch.collection.company_number=direct:elasticsearch-company_number-mapper
endpoint.mongodb.mapper.collection.company_number=direct:mongo-company_number-mapper
endpoint.mongodb.mapper.collection.dsq_officer=direct:mongo-disqualified_officer-mapper
endpoint.mongodb.mapper.collection.insolvency=direct:mongo-insolvency-mapper

# Service wrappers
endpoint.oracle.collection=direct:oracle-collection
endpoint.oracle.multi=direct:oracle-company-status-collection
endpoint.mongodb.wrapper.aggregation.collection=direct:mongodb-aggregation-collection
endpoint.elasticsearch.collection=direct:elasticsearch-collection

# Service wrapper transformers
transformer.elasticsearch.primary=direct:elasticsearch-primary
transformer.elasticsearch.alpha=direct:elasticsearch-alpha
transformer.mongo.company_profile=direct:company-profile-transformer
transformer.mongo.insolvency_cases=direct:mongo-insolvency_cases-transformer
transformer.mongo.disqualified_officer=direct:disqualified-officer-transformer
transformer.oracle.single_column=direct:oracle-single-column
transformer.oracle.insolvency_cases=direct:oracle-insolvency-cases

# Misc
endpoint.log.output=log:output
endpoint.shutdown=direct:shutdown
results.initial.capacity=${RESULTS_INITIAL_CAPACITY}
wrapper.retries=3

#camel
# https://camel.apache.org/manual/camel-3x-upgrade-guide-3_17.html#_stream_caching
camel.springboot.streamCachingEnabled=false