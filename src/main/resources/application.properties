spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

function.name.compare_count=direct:compare_count
endpoint.company_count.cron.tab=cron:company_count?schedule=${COMPANY_COUNT_CRONTAB}
endpoint.oracle.corporate_body_count=jdbc:dataSource?outputType=SelectOne
query.oracle.corporate_body_count=resource:classpath:/sql/company_count.sql
endpoint.mongodb.company_profile_count=mongodb:mongo?database=${ENDPOINT_MONGODB_COMPANY_PROFILE_DB_NAME}&collection=${ENDPOINT_MONGODB_COMPANY_PROFILE_COLLECTION_NAME}&operation=count&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}

function.name.compare_collection=direct:compare_collection
endpoint.company_collection.cron.tab=cron:company_collection?schedule=${COMPANY_COLLECTION_CRONTAB}
endpoint.oracle.corporate_body_collection=jdbc:dataSource
query.oracle.corporate_body_collection=resource:classpath:/sql/company_collection.sql
endpoint.mongodb.company_profile_collection=mongodb:mongo?database=${ENDPOINT_MONGODB_COMPANY_PROFILE_DB_NAME}&collection=${ENDPOINT_MONGODB_COMPANY_PROFILE_COLLECTION_NAME}&operation=findDistinct&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}

endpoint.dsq_officer_collection.cron.tab=cron:dsq_officer_collection?schedule=${DSQ_OFFICER_COLLECTION_CRONTAB}
endpoint.oracle.dsq_officer_collection=jdbc:dataSource
query.oracle.dsq_officer_collection=resource:classpath:/sql/dsq_officers_collection.sql
endpoint.mongodb.disqualifications_collection=mongodb:mongo?database=${ENDPOINT_MONGODB_DSQ_OFFICER_DB_NAME}&collection=${ENDPOINT_MONGODB_DSQ_OFFICER_COLLECTION_NAME}&operation=findDistinct&readPreference=${ENDPOINT_MONGODB_READ_PREFERENCE}

endpoint.s3.upload=aws2-s3://datarec-store?autoCreateBucket=true
endpoint.s3presigner.download=aws2-s3://datarec-store?operation=createDownloadLink

endpoint.output=direct:send-email
aws.expiry=2000

#s3.endpoint.override=${LOCALSTACK_OVERRIDE}
#aws.access.key=test
#aws.secret.key=test
#aws.region=us-east-1

endpoint.kafka=kafka://email-send?schemaRegistryURL=${SCHEMA_REGISTRY_URL}&brokers=${KAFKA_BROKER_ADDR}&valueSerializer=org.apache.kafka.common.serialization.ByteArraySerializer&requestRequiredAcks=-1&retries=10&maxBlockMs=1000&requestTimeoutMs=1000
email.recipient.list=${EMAIL_RECIPIENT_LIST}
email.application.id=${EMAIL_APPLICATION_ID}
email.message.id=${EMAIL_MESSAGE_ID}
email.sender=${EMAIL_SENDER}
email.date.format=dd MMMM yyyy